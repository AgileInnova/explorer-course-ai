"use strict";(self.webpackChunkexplorer_course=self.webpackChunkexplorer_course||[]).push([[5091],{3905:(e,a,t)=>{t.d(a,{Zo:()=>d,kt:()=>c});var n=t(7294);function r(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function l(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function o(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?l(Object(t),!0).forEach((function(a){r(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function s(e,a){if(null==e)return{};var t,n,r=function(e,a){if(null==e)return{};var t,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)t=l[n],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)t=l[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var i=n.createContext({}),p=function(e){var a=n.useContext(i),t=a;return e&&(t="function"==typeof e?e(a):o(o({},a),e)),t},d=function(e){var a=p(e.components);return n.createElement(i.Provider,{value:a},e.children)},u={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},m=n.forwardRef((function(e,a){var t=e.components,r=e.mdxType,l=e.originalType,i=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),m=p(t),c=r,k=m["".concat(i,".").concat(c)]||m[c]||u[c]||l;return t?n.createElement(k,o(o({ref:a},d),{},{components:t})):n.createElement(k,o({ref:a},d))}));function c(e,a){var t=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var l=t.length,o=new Array(l);o[0]=m;var s={};for(var i in a)hasOwnProperty.call(a,i)&&(s[i]=a[i]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var p=2;p<l;p++)o[p]=t[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,t)}m.displayName="MDXCreateElement"},6039:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>i,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>s,toc:()=>p});var n=t(7462),r=(t(7294),t(3905));const l={sidebar_position:1},o="Conceptos Basicos",s={unversionedId:"tutorial-js/conceptos-basicos",id:"tutorial-js/conceptos-basicos",title:"Conceptos Basicos",description:"Fundamentos de algoritmos con JavaScript",source:"@site/docs/tutorial-js/conceptos-basicos.md",sourceDirName:"tutorial-js",slug:"/tutorial-js/conceptos-basicos",permalink:"/explorer-course-ai/docs/tutorial-js/conceptos-basicos",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Javascript",permalink:"/explorer-course-ai/docs/category/javascript"},next:{title:"Estructuras Secuenciales",permalink:"/explorer-course-ai/docs/tutorial-js/estructuras-secuenciales"}},i={},p=[{value:"\xbfQu\xe9 es un algoritmo?",id:"qu\xe9-es-un-algoritmo",level:2},{value:"Declaraci\xf3n de variables",id:"declaraci\xf3n-de-variables",level:2},{value:"Tipos de datos",id:"tipos-de-datos",level:3},{value:"Alcance de las variables",id:"alcance-de-las-variables",level:2},{value:"Operadores",id:"operadores",level:2},{value:"L\xf3gica proposicional",id:"l\xf3gica-proposicional",level:2},{value:"Dise\xf1o de algoritmos",id:"dise\xf1o-de-algoritmos",level:2},{value:"Diagramas de flujo",id:"diagramas-de-flujo",level:3},{value:"Pseudoc\xf3digo",id:"pseudoc\xf3digo",level:3},{value:"\xbfQu\xe9 es JavaScript?",id:"qu\xe9-es-javascript",level:2},{value:"\xbfD\xf3nde colocar el JS?",id:"d\xf3nde-colocar-el-js",level:3},{value:"Comentarios",id:"comentarios",level:3},{value:"Comandos b\xe1sicos a usar en JavaScript",id:"comandos-b\xe1sicos-a-usar-en-javascript",level:3},{value:"Template string o plantillas literales",id:"template-string-o-plantillas-literales",level:3}],d={toc:p};function u(e){let{components:a,...t}=e;return(0,r.kt)("wrapper",(0,n.Z)({},d,t,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"conceptos-basicos"},"Conceptos Basicos"),(0,r.kt)("p",null,"Fundamentos de algoritmos con ",(0,r.kt)("strong",{parentName:"p"},"JavaScript")),(0,r.kt)("iframe",{width:"560",height:"315",src:"https://www.youtube.com/embed/_QyiYXgpkHg",title:"YouTube video player",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",allowFullScreen:!0}),(0,r.kt)("h2",{id:"qu\xe9-es-un-algoritmo"},"\xbfQu\xe9 es un algoritmo?"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Un algoritmo es una secuencia de pasos l\xf3gicos y ordenados con las cuales le damos soluci\xf3n a un problema determinado.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"Partes de un algoritmo"))),(0,r.kt)("blockquote",null,(0,r.kt)("ol",{parentName:"blockquote"},(0,r.kt)("li",{parentName:"ol"},"Inicio y Fin"),(0,r.kt)("li",{parentName:"ol"},"Declaraci\xf3n de variables"),(0,r.kt)("li",{parentName:"ol"},"Asignaci\xf3n de variables"),(0,r.kt)("li",{parentName:"ol"},"Entrada de datos"),(0,r.kt)("li",{parentName:"ol"},"Procesamiento"),(0,r.kt)("li",{parentName:"ol"},"Salida de datos"))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"Las caracter\xedsticas de los algoritmos"))),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Un algoritmo debe ser preciso e indicar el orden de realizaci\xf3n de cada paso.")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},'Los algoritmos as\xed como las recetas de cocina deben ser muy precisos para que funcionen correctamente, por ejemplo al seguir la receta de una torta se especifican los ingredientes y sus cantidades exactas, no es lo mismo decir "agregar harina" a decir "agregar un kilogramo de harina", de esta forma todos los algoritmos deben especificar sus pasos y el orden en que dejen ser ejecutados.')),(0,r.kt)("ol",{start:2},(0,r.kt)("li",{parentName:"ol"},"Un algoritmo debe estar definido. Si se sigue el algoritmo dos veces, se debe obtener el mismo resultado cada vez.")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Al sumar dos n\xfameros por ejemplo 1 + 1 la respuesta siempre va a ser 2, si vuelves a hacer la operaci\xf3n la respuesta seguir\xe1 siendo 2, lo mismo pasa con los algoritmos, por m\xe1s veces que se ejecute el resultado debe ser el mismo.")),(0,r.kt)("ol",{start:3},(0,r.kt)("li",{parentName:"ol"},"Un algoritmo debe ser finito. Si se sigue el algoritmo, se debe terminar en alg\xfan momento, o sea, debe tener un n\xfamero finito de pasos.")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},'Todo algoritmo debe tener un inicio y un fin, por ejemplo si tuvieras que cambiar una bombilla el inicio podr\xeda ser "Comprar bombilla nueva" y el final "Instalar la bombilla".')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"Ejemplos de algoritmos"))," "),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Un cliente llega a una entidad bancaria para realizar una consignaci\xf3n, el cajero le pide el n\xfamero de\nla cuenta y el dinero a consignar, verifica que la cuenta si existe, si la cuenta es v\xe1lida se hace la consignaci\xf3n\n(al saldo le aumenta el dinero recibido) de lo contrario devuelve el dinero.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"1. Inicio\n2. Pedir n\xfamero de la cuenta y el dinero\n3. Si la cuenta es v\xe1lida realice el paso 4 de lo contrario siga en el paso 6\n4. saldo = saldo + dinero\n5. Ir a 7\n6. Devolver el dinero\n7. Final\n")),(0,r.kt)("ol",{start:2},(0,r.kt)("li",{parentName:"ol"},"Hacer un avi\xf3n de papel")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"1. Inicio\n2. Tomar una hoja de papel tama\xf1o carta.\n3. Doblar el papel a la mitad en orientaci\xf3n vertical.\n4. Desdoblar el papel.\n5. Doblar las dos esquinas de la parte superior hacia el pliegue central para hacer un tri\xe1ngulo.\n6. Tomar las esquinas superiores del borde exterior y doblarlas hacia el centro. \n7. Doblar el papel a la mitad hacia atr\xe1s.\n8. Colocar el papel de modo que el pliegue plano est\xe9 orientado en la parte inferior.\n9. Doblar el papel hacia abajo desde la parte superior para crear un ala.\n10. Repetir paso 8 y 9 con el otro lado del papel.\n11. Final\n")),(0,r.kt)("ol",{start:3},(0,r.kt)("li",{parentName:"ol"},"Cepillarse los dientes")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"1. Inicio\n2. Poner pasta dent\xedfrica en el cepillo.\n3. Humedecer el cepillo con agua.\n4. Cepillar una muela hasta que est\xe9 limpia.\n5. Repetir el paso 3 con cada uno de los dientes. \n6. Enjuagarse la boca con agua.\n7. Limpiar el cepillo y secarlo.\n8. Final\n")),(0,r.kt)("h2",{id:"declaraci\xf3n-de-variables"},"Declaraci\xf3n de variables"),(0,r.kt)("p",null,"Los datos son una parte muy importante en un algoritmo, pues son ellos el punto de partida y son ellos quienes sufren las transformaciones que dar\xe1n los resultados deseados. Por esta raz\xf3n, el algoritmo debe guardar los datos en un sitio donde los pueda  leer  y modificar cada vez que lo requiera, los sitios donde el algoritmo guarda los datos los llamaremos ESPACIOS DE MEMORIA."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"Variables"))),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"En programaci\xf3n, las variables son espacios reservados en la memoria que, como su nombre indica, pueden cambiar de contenido a lo largo de la ejecuci\xf3n de un programa, en ellas almacenamos alg\xfan tipo de dato. Por ahora, sin entrar a mucho detalle, entendamos que cuando ponemos la palabra reservada ",(0,r.kt)("inlineCode",{parentName:"p"},"let")," al inicio nos estamos refiriendo a una variable. "),(0,r.kt)("pre",{parentName:"blockquote"},(0,r.kt)("code",{parentName:"pre"},'let carro = "Mazda"\n'))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"Constantes"))),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Una constante es un valor que no puede ser alterado/modificado durante la ejecuci\xf3n de un programa, \xfanicamente puede ser le\xeddo. "),(0,r.kt)("pre",{parentName:"blockquote"},(0,r.kt)("code",{parentName:"pre"},"const pi = 3.1415;\n"))),(0,r.kt)("h3",{id:"tipos-de-datos"},"Tipos de datos"),(0,r.kt)("p",null,"Un valor en JavaScript siempre pertenece a un tipo de dato determinado. Podemos almacenar un valor de cualquier tipo dentro de una variable. Por ejemplo, una variable puede contener en un momento un string y luego almacenar un n\xfamero. Los lenguajes de programaci\xf3n que permiten estas cosas, como JavaScript, se denominan \u201cdin\xe1micamente tipados\u201d, lo que significa que all\xed hay tipos de datos, pero las variables no est\xe1n vinculadas r\xedgidamente a ninguno de ellos."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"Num\xe9ricas"))),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Una variable numerica como su nombre lo indica, se utiliza para almacenar n\xfameros enteros y/o decimales, para este ultimo solo necesitas agregar el punto (.) entre los n\xfameros enteros, esto es debido a que en los lenguajes de programaci\xf3n, la coma (,) se usa para a\xf1adir otros datos a la variable (separar elementos)."),(0,r.kt)("pre",{parentName:"blockquote"},(0,r.kt)("code",{parentName:"pre"},"let suma = 1;\n"))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"Cadena de texto o Strings"))),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Este tipo de variables almacena texto, el texto lo debes poner entre comillas simples o comillas dobles."),(0,r.kt)("pre",{parentName:"blockquote"},(0,r.kt)("code",{parentName:"pre"},'let palabra = "Hello word";\n'))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"Booleana"))),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},'Tambien es conocida como variable tipo "Bandera o semaforo" ya que almacena un valor l\xf3gico, para representar lo verdadero o falso, en la programaci\xf3n se coloca "true" o "false".'),(0,r.kt)("pre",{parentName:"blockquote"},(0,r.kt)("code",{parentName:"pre"},"let cumple = true;\nlet noCumple = false;\n"))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"Arreglos o Arrays"))),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Es una variable en donde puedes almacenar m\xe1s de un elemento, por ejemplo tener varios strings en una sola variable. Para definir un array se deben usar los corchetes (","[ ]",") y dentro de estos colocar cada elemento separado por comas (,). Cada elemento almacenado en el array tiene una posici\xf3n comenzando desde el 0 hasta la cantidad de elementos almacenado, asi que para acceder a un elemento especifico solo debes llamar esa posici\xf3n. Puedes buscar m\xe1s informaci\xf3n sobre este tipo de datos en esta pagina: ",(0,r.kt)("a",{parentName:"p",href:"https://www.w3schools.com/js/js_arrays.asp"},"Arreglos")),(0,r.kt)("pre",{parentName:"blockquote"},(0,r.kt)("code",{parentName:"pre"},'let animales = ["perro", "gato", "conejo"];\nanimales[0] = "perro"\nanimales[1] = "gato"\nanimales[2] = "conejo"\n'))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"Objetos"))),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Asi como los arrays, en las variables tipo objeto tambien se puede almacenar m\xe1s de un elemento, solo que para definir un objeto se deben usar llaves ({ }) y dentro de estas colocar cada una de las propiedas con su respectivo valor. Para acceder a una propiedad especifica solo tienes que usar la notaci\xf3n de punto. Puedes buscar m\xe1s informaci\xf3n sobre este tipo de datos en esta pagina: ",(0,r.kt)("a",{parentName:"p",href:"https://www.w3schools.com/js/js_objects.asp"},"Objetos")),(0,r.kt)("pre",{parentName:"blockquote"},(0,r.kt)("code",{parentName:"pre"},'let usuario = { nombre: "Pepito",\n                apellido: "Perez" };\nusuario.nombre = "Pepito";\nusuario.apellido = "Perez"\n'))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"null y undefined")),(0,r.kt)("p",null,"null y undefined son dos tipos de datos primitivos existentes en JS, a menudo se suelen confundir y creer que son lo mismo. A continuaci\xf3n ver\xe1s algunas diferencias:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"null es un valor asignado. No significa nada."),(0,r.kt)("li",{parentName:"ul"},"undefined normalmente significa que una variable ha sido declarada pero no definida todav\xeda."),(0,r.kt)("li",{parentName:"ul"},"null y undefined son valores falsos."),(0,r.kt)("li",{parentName:"ul"},"null y undefined son ambos primitivos.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"let numero; \nconsole.log(numero); // undefined\nnumero = null;\nconsole.log(numero); // null\nnumero = 6;\nconsole.log(numero); // 6\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Function")),(0,r.kt)("p",null,"En JS las funciones tambi\xe9n son otro tipo de dato, por eso podemos almacenarlas por ejemplo en una constante o variable. "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"const sumar = (a,b) => a+b\nconsole.log(typeof sumar); //function\n")),(0,r.kt)("p",null,"Tambien en JS tenemos tipos de datos como: Symbol y BigInt. Si deseas saber m\xe1s sobre los tipos de datos en JS puedes consultar los siguientes enlaces: ",(0,r.kt)("a",{parentName:"p",href:"https://es.javascript.info/types"},"https://es.javascript.info/types")," , ",(0,r.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/es/docs/Web/JavaScript/Data_structures"},"https://developer.mozilla.org/es/docs/Web/JavaScript/Data_structures")),(0,r.kt)("h2",{id:"alcance-de-las-variables"},"Alcance de las variables"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"Scope"))),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Se le llama \xe1mbito de las variables al lugar donde estas est\xe1n disponibles. Por lo general, cuando declaramos una variable hacemos que est\xe9 disponible en el lugar donde se ha declarado, esto ocurre en todos los lenguajes de programaci\xf3n y como Javascript se define dentro de una p\xe1gina web, las variables que declaremos en la p\xe1gina estar\xe1n accesibles dentro de ella.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"Globales"))),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Son variables accesibles desde cualquier lugar de la p\xe1gina, es decir, desde el script donde se han declarado y todos los dem\xe1s scripts de la p\xe1gina."),(0,r.kt)("pre",{parentName:"blockquote"},(0,r.kt)("code",{parentName:"pre"},'let miVariable = "Hello Word";\n'))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"Locales"))),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Son variables a las que s\xf3lo puedes acceder a ellas dentro del lugar donde se declararon, es decir, si la hab\xedas declarado en una funci\xf3n solo podr\xe1s acceder a ella cuando estes en esa funci\xf3n. "),(0,r.kt)("pre",{parentName:"blockquote"},(0,r.kt)("code",{parentName:"pre"},'function miFuncion (){ \n    let miVariable = "Hello Word";\n} \n'))),(0,r.kt)("p",null,"M\xe1s informaci\xf3n sobre el alcance de las variables ",(0,r.kt)("a",{parentName:"p",href:"https://uniwebsidad.com/libros/javascript/capitulo-4/ambito-de-las-variables"},"aqu\xed")),(0,r.kt)("h2",{id:"operadores"},"Operadores"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"Operadores aritm\xe9ticos"))),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},'Los operadores aritm\xe9ticos son aquellos que "manipulan" datos num\xe9ricos, tanto enteros como reales.  Los operadores aritm\xe9ticos realizan operaciones matem\xe1ticas, como sumas o restas. ')),(0,r.kt)("p",null,"El orden de evaluaci\xf3n depende del orden de prioridad o jerarquia:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Par\xe9ntesis: Operaciones que est\xe9n entre par\xe9ntesis."),(0,r.kt)("li",{parentName:"ol"},"Potencias y ra\xedces."),(0,r.kt)("li",{parentName:"ol"},"Producto, divisiones y m\xf3dulo."),(0,r.kt)("li",{parentName:"ol"},"Sumas y restas")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Operador"),(0,r.kt)("th",{parentName:"tr",align:null},"Operaci\xf3n"),(0,r.kt)("th",{parentName:"tr",align:null},"Ejercicio"),(0,r.kt)("th",{parentName:"tr",align:null},"Resultado"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"+"),(0,r.kt)("td",{parentName:"tr",align:null},"Suma"),(0,r.kt)("td",{parentName:"tr",align:null},"2 + 2"),(0,r.kt)("td",{parentName:"tr",align:null},"4")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"Resta"),(0,r.kt)("td",{parentName:"tr",align:null},"4 - 2"),(0,r.kt)("td",{parentName:"tr",align:null},"2")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"*"),(0,r.kt)("td",{parentName:"tr",align:null},"Multiplicaci\xf3n"),(0,r.kt)("td",{parentName:"tr",align:null},"4 * 6"),(0,r.kt)("td",{parentName:"tr",align:null},"24")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"/"),(0,r.kt)("td",{parentName:"tr",align:null},"Divisi\xf3n"),(0,r.kt)("td",{parentName:"tr",align:null},"10 / 2"),(0,r.kt)("td",{parentName:"tr",align:null},"5")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"%"),(0,r.kt)("td",{parentName:"tr",align:null},"M\xf3dulo"),(0,r.kt)("td",{parentName:"tr",align:null},"10 % 2"),(0,r.kt)("td",{parentName:"tr",align:null},"0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"++"),(0,r.kt)("td",{parentName:"tr",align:null},"Incremento"),(0,r.kt)("td",{parentName:"tr",align:null},"10++"),(0,r.kt)("td",{parentName:"tr",align:null},"11")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"--"),(0,r.kt)("td",{parentName:"tr",align:null},"Decremento"),(0,r.kt)("td",{parentName:"tr",align:null},"10--"),(0,r.kt)("td",{parentName:"tr",align:null},"9")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"Operadores relacionales"))),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Se utlizan para hacer comparaciones entre variables o datos.")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Operador"),(0,r.kt)("th",{parentName:"tr",align:null},"Operaci\xf3n"),(0,r.kt)("th",{parentName:"tr",align:null},"Ejercicio"),(0,r.kt)("th",{parentName:"tr",align:null},"Resultado"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},">"),(0,r.kt)("td",{parentName:"tr",align:null},"Mayor que"),(0,r.kt)("td",{parentName:"tr",align:null},"a > b"),(0,r.kt)("td",{parentName:"tr",align:null},"Verdadero si a es mayor que b")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"<"),(0,r.kt)("td",{parentName:"tr",align:null},"Menor que"),(0,r.kt)("td",{parentName:"tr",align:null},"a < b"),(0,r.kt)("td",{parentName:"tr",align:null},"Verdadero si a es menor que b")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},">="),(0,r.kt)("td",{parentName:"tr",align:null},"Mayor o igual"),(0,r.kt)("td",{parentName:"tr",align:null},"a >= b"),(0,r.kt)("td",{parentName:"tr",align:null},"Verdadero si a es mayor o igual que b")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"<="),(0,r.kt)("td",{parentName:"tr",align:null},"Menor o igual"),(0,r.kt)("td",{parentName:"tr",align:null},"a <= b"),(0,r.kt)("td",{parentName:"tr",align:null},"Verdadero si a es menor o igual que b")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"!="),(0,r.kt)("td",{parentName:"tr",align:null},"Diferente"),(0,r.kt)("td",{parentName:"tr",align:null},"a != b"),(0,r.kt)("td",{parentName:"tr",align:null},"Verdadero si a es diferente que b")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"=="),(0,r.kt)("td",{parentName:"tr",align:null},"Igual valor"),(0,r.kt)("td",{parentName:"tr",align:null},"a == b"),(0,r.kt)("td",{parentName:"tr",align:null},"Verdadero si a es igual que b")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"==="),(0,r.kt)("td",{parentName:"tr",align:null},"Igual valor y tipo de dato (js)"),(0,r.kt)("td",{parentName:"tr",align:null},"a === b"),(0,r.kt)("td",{parentName:"tr",align:null},"Verdadero si a es estrictamente igual que b")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"Operadores l\xf3gicos"))),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Los operadores l\xf3gicos nos proporcionan un resultado a partir de que se cumpla o no cierta condici\xf3n, producen un resultado booleano, y sus operandos son tambi\xe9n valores l\xf3gicos o asimilables a ellos (los valores num\xe9ricos son asimilados a verdadero o falso seg\xfan su valor sea cero o distinto de cero).")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Operador"),(0,r.kt)("th",{parentName:"tr",align:null},"Operaci\xf3n"),(0,r.kt)("th",{parentName:"tr",align:null},"Ejercicio"),(0,r.kt)("th",{parentName:"tr",align:null},"Resultado"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"&&"),(0,r.kt)("td",{parentName:"tr",align:null},"AND - Y"),(0,r.kt)("td",{parentName:"tr",align:null},"a < b && a < c"),(0,r.kt)("td",{parentName:"tr",align:null},"Verdadero si tanto a < b como a < c son verdaderas.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"|","|"),(0,r.kt)("td",{parentName:"tr",align:null},"OR - O"),(0,r.kt)("td",{parentName:"tr",align:null},"a < b ","|","|"," a < c"),(0,r.kt)("td",{parentName:"tr",align:null},"Verdadero si a < b o a < c son verdaderas.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"!"),(0,r.kt)("td",{parentName:"tr",align:null},"NOT - Negaci\xf3n"),(0,r.kt)("td",{parentName:"tr",align:null},"!a"),(0,r.kt)("td",{parentName:"tr",align:null},"No a - Inverso de a")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"Operadores de asignaci\xf3n"))),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Los operadores de asignaci\xf3n asignan un valor a su operando izquierdo bas\xe1ndose en el valor de su operando derecho. Los puedes diferenciar de otros operadores ya que estos tiene el operador igual (=).")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Operador"),(0,r.kt)("th",{parentName:"tr",align:null},"Operaci\xf3n"),(0,r.kt)("th",{parentName:"tr",align:null},"Ejercicio"),(0,r.kt)("th",{parentName:"tr",align:null},"Resultado"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"="),(0,r.kt)("td",{parentName:"tr",align:null},"Asignaci\xf3n"),(0,r.kt)("td",{parentName:"tr",align:null},"a = b"),(0,r.kt)("td",{parentName:"tr",align:null},"a = b")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"-="),(0,r.kt)("td",{parentName:"tr",align:null},"Asignaci\xf3n y Resta"),(0,r.kt)("td",{parentName:"tr",align:null},"a -= b"),(0,r.kt)("td",{parentName:"tr",align:null},"a = a - b")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"+="),(0,r.kt)("td",{parentName:"tr",align:null},"Asignaci\xf3n y Suma"),(0,r.kt)("td",{parentName:"tr",align:null},"a += b"),(0,r.kt)("td",{parentName:"tr",align:null},"a = a + b")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"*="),(0,r.kt)("td",{parentName:"tr",align:null},"Asignaci\xf3n y Multiplicaci\xf3n"),(0,r.kt)("td",{parentName:"tr",align:null},"a *= b"),(0,r.kt)("td",{parentName:"tr",align:null},"a = a * b")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"/="),(0,r.kt)("td",{parentName:"tr",align:null},"Asignaci\xf3n y Divisi\xf3n"),(0,r.kt)("td",{parentName:"tr",align:null},"a /= b"),(0,r.kt)("td",{parentName:"tr",align:null},"a = a / b")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"%="),(0,r.kt)("td",{parentName:"tr",align:null},"Asignaci\xf3n y M\xf3dulo"),(0,r.kt)("td",{parentName:"tr",align:null},"a %= b"),(0,r.kt)("td",{parentName:"tr",align:null},"a = a % b")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"Ejercicio"))),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Dadas las variables de tipo int con valores A = 5, B = 3, C = -12 indicar si la evaluaci\xf3n de estas expresiones dar\xeda como resultado verdadero o falso: "),(0,r.kt)("pre",{parentName:"blockquote"},(0,r.kt)("code",{parentName:"pre"},"a) A > 3\xa0\nb) A > C\nc) A < C \nd) (A + B == 8) || (A - B == 6)\ne) A > 3 && B >= 3 && C < -3\n"))),(0,r.kt)("h2",{id:"l\xf3gica-proposicional"},"L\xf3gica proposicional"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"La l\xf3gica matem\xe1tica o proposicional consiste en utilizar s\xedmbolos a trav\xe9s de tablas de verdad que nos indican lo verdadero o falso, esto te puede ayudar para afianzar m\xe1s es uso de ",(0,r.kt)("strong",{parentName:"p"},"Operadores l\xf3gicos"),".")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"A   B"),(0,r.kt)("th",{parentName:"tr",align:null},"A ^ B"),(0,r.kt)("th",{parentName:"tr",align:null},"A v B"),(0,r.kt)("th",{parentName:"tr",align:null},"\xac A"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"V   V"),(0,r.kt)("td",{parentName:"tr",align:null},"V"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2228"),(0,r.kt)("td",{parentName:"tr",align:null},"F")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"V   F"),(0,r.kt)("td",{parentName:"tr",align:null},"F"),(0,r.kt)("td",{parentName:"tr",align:null},"V"),(0,r.kt)("td",{parentName:"tr",align:null},"F")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"F   V"),(0,r.kt)("td",{parentName:"tr",align:null},"F"),(0,r.kt)("td",{parentName:"tr",align:null},"V"),(0,r.kt)("td",{parentName:"tr",align:null},"V")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"F   F"),(0,r.kt)("td",{parentName:"tr",align:null},"F"),(0,r.kt)("td",{parentName:"tr",align:null},"F"),(0,r.kt)("td",{parentName:"tr",align:null},"V")))),(0,r.kt)("p",null,"M\xe1s informaci\xf3n sobre l\xf3gica proposicional aqu\xed: ",(0,r.kt)("a",{parentName:"p",href:"https://www.youtube.com/watch?v=vKe0UKSpNQQ"},"https://www.youtube.com/watch?v=vKe0UKSpNQQ"),", ",(0,r.kt)("a",{parentName:"p",href:"https://www.sdelsol.com/glosario/logica-proposicional/"},"https://www.sdelsol.com/glosario/logica-proposicional/")),(0,r.kt)("h2",{id:"dise\xf1o-de-algoritmos"},"Dise\xf1o de algoritmos"),(0,r.kt)("p",null,"Para resolver un problema con programas de computador es necesario realizar una serie de pasos, los cuales se describen a continuaci\xf3n:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Definici\xf3n de problema: El enunciado del problema, el cual debe ser lo suficientemente claro y preciso. Una vez le\xeddo el enunciado del problema debe quedar claro lo que desea obtener del computador, es decir, conocer el objetivo que se desea alcanzar, de no ser as\xed, no tiene sentido continuar con los siguientes pasos. "),(0,r.kt)("li",{parentName:"ol"},"An\xe1lisis del programa: Es la etapa m\xe1s importante en la soluci\xf3n de un problema de computador, ya que de esta depender\xe1 en gran medida el alcanzar o no los resultados que se desean obtener. Se considera una buena pr\xe1ctica de programaci\xf3n dedicar el tiempo que sea necesario para realizar un buen an\xe1lisis. "),(0,r.kt)("li",{parentName:"ol"},"Una vez entendido lo que se desea obtener del computador, se procede a determinar lo siguiente. ",(0,r.kt)("blockquote",{parentName:"li"},(0,r.kt)("ul",{parentName:"blockquote"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Datos de entrada:")," Son los datos de entrada suministrados generalmente en el enunciado del problema de forma expl\xedcita o impl\xedcita. "),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Datos de proceso:")," Son los c\xe1lculos y operaciones aritm\xe9ticas que se desean realizar para obtener los resultados deseados. "),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Datos de Salida:")," Son los resultados que se desean obtener. ")))),(0,r.kt)("li",{parentName:"ol"},"Dise\xf1o del algoritmo: Consiste en la elaboraci\xf3n del algoritmo, el cual puede ser representado por medio de: ",(0,r.kt)("blockquote",{parentName:"li"},(0,r.kt)("ul",{parentName:"blockquote"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Diagramas de flujo:")," Es la representaci\xf3n gr\xe1fica de las secuencias de pasos l\xf3gicos. "),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Pseudoc\xf3digo:")," Es la secuencia de pasos l\xf3gicos escritos en un lenguaje nativo de cada persona.")))),(0,r.kt)("li",{parentName:"ol"},"Prueba de escritorio: Permite detectar posibles errores cometidos por el programador, en la elaboraci\xf3n del algoritmo, luego se sigue la secuencia de pasos l\xf3gicos hasta llegar al nivel final, y determinar si los resultados arrojados son los esperados, en caso de que no son correctos, se deben regresar y revisar el diagrama y el pseudoc\xf3digo, o el c\xf3digo, en caso tal de que se este realizando directamente en alg\xfan lenguaje de programaci\xf3n. Mira este ",(0,r.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=-5_1mMoIaxo"},"v\xeddeo")," corto con un ejemplo de como puedes aplicarla en tus algoritmos. ")),(0,r.kt)("h3",{id:"diagramas-de-flujo"},"Diagramas de flujo"),(0,r.kt)("p",null,"Los diagramas de flujo sirven para describir procesos, sistemas o algoritmos. Al usarlos, puedes entender el problema que quieres solucionar y los problemas pasan de ser muy complejos a ser claros y f\xe1ciles de comprender. Los diagramas de flujo emplean rect\xe1ngulos, \xf3valos, diamantes y otras figuras para definir los pasos que ejecuta el algoritmo y las diferentes rutas que puede seguir."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"S\xedmbolo"),(0,r.kt)("th",{parentName:"tr",align:null},"Nombre"),(0,r.kt)("th",{parentName:"tr",align:null},"Funci\xf3n"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"\u2b2d"),(0,r.kt)("td",{parentName:"tr",align:null},"Inicio / Final"),(0,r.kt)("td",{parentName:"tr",align:null},"Representa el inicio y el final de un proceso.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"\u279d"),(0,r.kt)("td",{parentName:"tr",align:null},"L\xednea de flujo"),(0,r.kt)("td",{parentName:"tr",align:null},"Indica el orden de la ejecuci\xf3n de las operaciones. La flecha indica la siguiente instrucci\xf3n.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"\u25b1"),(0,r.kt)("td",{parentName:"tr",align:null},"Entrada / Salida"),(0,r.kt)("td",{parentName:"tr",align:null},"Representa la lectura de datos en la entrada y la impresi\xf3n de datos en la salida.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"\u25ad"),(0,r.kt)("td",{parentName:"tr",align:null},"Proceso"),(0,r.kt)("td",{parentName:"tr",align:null},"Representa cualquier tipo de operaci\xf3n.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"\u2662"),(0,r.kt)("td",{parentName:"tr",align:null},"Decisi\xf3n"),(0,r.kt)("td",{parentName:"tr",align:null},"Permite analizar una situaci\xf3n, con base a los valores verdadero y falso.")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"Ejemplo"))),(0,r.kt)("p",{align:"center"},(0,r.kt)("img",{src:"https://ventajasydesventajas.top/wp-content/uploads/2021/09/diagrama-de-flujo.png"})),(0,r.kt)("p",null,"M\xe1s informaci\xf3n aqu\xed: ",(0,r.kt)("a",{parentName:"p",href:"https://www.lucidchart.com/pages/es/que-es-un-diagrama-de-flujo"},"Diagramas de flujo")),(0,r.kt)("h3",{id:"pseudoc\xf3digo"},"Pseudoc\xf3digo"),(0,r.kt)("p",null,'La palabra "Pseudo" proviene del griego y significa "Falso". Si juntas los dos t\xe9rminos "Pseudo" y "C\xf3digo" la palabra que se forma es "C\xf3digo falso", exactamente esto es lo que hacemos al construir pseudoc\xf3digos, es una forma de describir instrucciones l\xf3gicas que estructuralmente se asemejan a los lenguajes de programaci\xf3n, pero se utilizan palabras normales para que todas las personas lo puedan leer y escribir de forma sencilla.'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"Ejemplo"))),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Queremos obtener el volumen de un cilindro. Para esto, hay que solicitarle al usuario que ingrese valores conocidos como la altura y el di\xe1metro del cilindro. Luego, es necesario indicar al algoritmo cu\xe1l es la ecuaci\xf3n a utilizar y se indicar\xe1n los valores ingresados que corresponden a cada variable. Una manera de desarrollar un diagrama de flujo:"),(0,r.kt)("pre",{parentName:"blockquote"},(0,r.kt)("code",{parentName:"pre"},"Inicio\nMostrar \u201cIngresar valor 1\u201d: Pedir A\nMostrar \u201cIngresar valor 2\u201d: Pedir B\nMostrar \u201cIngresar valor 3\u201d: Pedir C\nM=(A+B+C)/3\nMostrar \u201cLa media aritm\xe9tica de los tres valores ingresados es\u201d, M\nFin\n"))),(0,r.kt)("p",null,"M\xe1s informaci\xf3n aqu\xed: ",(0,r.kt)("a",{parentName:"p",href:"https://conceptoabc.com/pseudocodigo/"},"Pseudoc\xf3digo")),(0,r.kt)("h2",{id:"qu\xe9-es-javascript"},"\xbfQu\xe9 es JavaScript?"),(0,r.kt)("p",null,"JavaScript, a diferencia de HTML y CSS, s\xed que es un lenguaje de programaci\xf3n. Este lenguaje nos permite dar instrucciones al ordenador, en este caso al navegador web, para explicarle c\xf3mo debe mostrar nuestra p\xe1gina y que debe hacer en qu\xe9 situaci\xf3n (si se pulsa un bot\xf3n, si se rellena un campo, si pulsamos un enlace, etc.)"),(0,r.kt)("p",null,"JavaScript en su d\xeda fue creado para realizar validaciones sobre datos en un formulario, pero ese tiempo qued\xf3 ya muy atr\xe1s. Hoy en d\xeda es uno de los lenguajes m\xe1s populares y gran parte de ese m\xe9rito se debe a que es el lenguaje de la web, es decir, es el \xfanico lenguaje de programaci\xf3n que entienden los navegadores (debemos recordar que HTML y CSS no son lenguajes de programaci\xf3n). Desde su inicio se ha expandido y sus fronteras han ido m\xe1s all\xe1 de la web hasta llegar al punto en el que se utiliza JavaScript para programar aplicaciones para ordenador, servidores, robots e incluso proyectos espaciales llevados a cabo por la NASA."),(0,r.kt)("h3",{id:"d\xf3nde-colocar-el-js"},"\xbfD\xf3nde colocar el JS?"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Puedes colocar codigo js en dos partes, la primera es incrustar el script en el  con la etiqueta ",(0,r.kt)("inlineCode",{parentName:"p"},"<script>"))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"Ejemplo"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"<script>\nvar nombre = 'Pepito';\nconsole.log('Hola' + nombre + '\xbfC\xf3mo est\xe1s?');\n<\/script>\n")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Tambien puedes referenciar el archivo JS a tu HTML, esta es la mejor forma de incluir Js en HTML ya que normalmente los archivos js est\xe1n separados y colocar todo el codigo en el html no es buena practica. ")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"Ejemplo"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'<script src="js/myscript.js"><\/script>\n')),(0,r.kt)("h3",{id:"comentarios"},"Comentarios"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},'Una muy buena practica en la programaci\xf3n es tener tu codigo limpio y bien documentado, esto para que otros programadores puedan leero sin problemas o incluso para que tu "yo" del futuro pueda entender que fue lo que hiciste. Los comentarios te ayudar\xe1n a tener organizado el codigo, puedes explicar que es lo que hace una funci\xf3n, para que sirve una variable o cualquier dato relevante para el funcionamiento del programa. En js podemos insertar comentarios de muchas formas, esto no se va a visualizar en la pagina web, pero si quedar\xe1 dentro del codigo.')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Comentarios de una linea: ",(0,r.kt)("inlineCode",{parentName:"li"},"//Este es mi comentario")),(0,r.kt)("li",{parentName:"ul"},"Comentarios de bloque, comienzan con /",(0,r.kt)("em",{parentName:"li"}," y terminan con "),"/: ",(0,r.kt)("inlineCode",{parentName:"li"},"/* Este es un\n                                                              comentario de bloque\n                                                           */"))),(0,r.kt)("h3",{id:"comandos-b\xe1sicos-a-usar-en-javascript"},"Comandos b\xe1sicos a usar en JavaScript"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"let:")," Declarar variables limitando su alcance, es decir, que solo est\xe1n disponibles dentro de todo el bloque de la funci\xf3n donde fueron declaradas."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"var:")," Define una variable global o local en una funci\xf3n sin importar el \xe1mbito, es decir, que est\xe1n disponibles dentro del bloque de c\xf3digo actual, o sea, el \xe1rea entre { y }."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"const:")," Definir variables constantes cuyo valor nunca var\xeda."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"prompt():")," Ventana emergente para ingresar datos."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"alert():")," Ventana emergente en el navegador. "),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"document.write():")," Muestra informaci\xf3n en el archivo index.html. "),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"console.log():")," Imprime en consola. "),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"parseInt():")," Convierte texto a n\xfamero entero."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"parseFloat():")," Convierte texto a n\xfamero flotante."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"typeof():")," Muestra el tipo de dato de las variables.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"Diferencia entre let var y const"))),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Tanto las varibales ",(0,r.kt)("em",{parentName:"p"},"let")," y ",(0,r.kt)("em",{parentName:"p"},"var")," permiten actualizar el valor de una variable mientras que ",(0,r.kt)("em",{parentName:"p"},"const")," no lo permite, esta variable es estatica. Las variables definias con ",(0,r.kt)("em",{parentName:"p"},"let")," est\xe1n disponibles dentro de todo el bloque de la funci\xf3n donde fueron declaradas. Y las variables definidas con ",(0,r.kt)("em",{parentName:"p"},"var")," est\xe1n disponibles dentro del bloque de c\xf3digo actual, o sea, el area entre { y }.")),(0,r.kt)("p",null,"M\xe1s informaci\xf3n sobre la diferencia entre var y let aqu\xed: ",(0,r.kt)("a",{parentName:"p",href:"https://platzi.com/blog/la-diferencia-entre-let-y-var/?utm_source=google&utm_medium=cpc&utm_campaign=12915366154&utm_adgroup=&utm_content=&gclid=CjwKCAiA4KaRBhBdEiwAZi1zzoiQlyEIZSwaLPV3rd97A2sWtkp9qa7plM0NQUkrbZF-8_wKs6LDHxoCs30QAvD_BwE&gclsrc=aw.ds"},"Var y let")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"Tipos de consolas"))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"console.log(): El m\xe1s usado por excelencia para mensajes generales de registro de informaci\xf3n. Es posible imprimir varios valores separados por comas."),(0,r.kt)("li",{parentName:"ul"},"console.warn(): Muestra un mensaje de advertencia."),(0,r.kt)("li",{parentName:"ul"},"console.info(): Muestra un mensaje de informaci\xf3n."),(0,r.kt)("li",{parentName:"ul"},"console.error(): Muestra un mensaje de error.")),(0,r.kt)("h3",{id:"template-string-o-plantillas-literales"},"Template string o plantillas literales"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Son cadenas literales que habilitan el uso de expresiones incrustadas. Esto quiere decir que puedes utilizar cadenas de caracteres de m\xe1s de una linea y tambien puedes incrustar funciones o variables de js.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"Ejemplo"))),(0,r.kt)("p",null,'Imagina que quieres hacer un console.log() saludando a una persona son el nombre "Pepito", para esto tienes dos formas de hacerlo:'),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"let nombre = \"Pepito\";\n\n//Forma 1\nconsole.log('Hola' + nombre + '\xbfC\xf3mo est\xe1s?')\n\n//Forma 2\nconsole.log(`Hola ${nombre} \xbfC\xf3mo est\xe1s?`)\n")),(0,r.kt)("p",null,"Ambas formas son v\xe1lidas, pero intenta siempre que puedas utilizar plantillas literales o 'Comillas invertidas' para concatenar variables."))}u.isMDXComponent=!0}}]);