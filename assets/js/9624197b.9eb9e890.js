"use strict";(self.webpackChunkexplorer_course=self.webpackChunkexplorer_course||[]).push([[164],{3905:(e,a,t)=>{t.d(a,{Zo:()=>m,kt:()=>p});var n=t(7294);function l(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function o(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function r(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?o(Object(t),!0).forEach((function(a){l(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function s(e,a){if(null==e)return{};var t,n,l=function(e,a){if(null==e)return{};var t,n,l={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],a.indexOf(t)>=0||(l[t]=e[t]);return l}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var c=n.createContext({}),i=function(e){var a=n.useContext(c),t=a;return e&&(t="function"==typeof e?e(a):r(r({},a),e)),t},m=function(e){var a=i(e.components);return n.createElement(c.Provider,{value:a},e.children)},d={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},u=n.forwardRef((function(e,a){var t=e.components,l=e.mdxType,o=e.originalType,c=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),u=i(t),p=l,g=u["".concat(c,".").concat(p)]||u[p]||d[p]||o;return t?n.createElement(g,r(r({ref:a},m),{},{components:t})):n.createElement(g,r({ref:a},m))}));function p(e,a){var t=arguments,l=a&&a.mdxType;if("string"==typeof e||l){var o=t.length,r=new Array(o);r[0]=u;var s={};for(var c in a)hasOwnProperty.call(a,c)&&(s[c]=a[c]);s.originalType=e,s.mdxType="string"==typeof e?e:l,r[1]=s;for(var i=2;i<o;i++)r[i]=t[i];return n.createElement.apply(null,r)}return n.createElement.apply(null,t)}u.displayName="MDXCreateElement"},7956:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>c,contentTitle:()=>r,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>i});var n=t(7462),l=(t(7294),t(3905));const o={sidebar_position:5},r="DOM (Document Object Model)",s={unversionedId:"tutorial-js/dom",id:"tutorial-js/dom",title:"DOM (Document Object Model)",description:"Tareas",source:"@site/docs/tutorial-js/dom.md",sourceDirName:"tutorial-js",slug:"/tutorial-js/dom",permalink:"/explorer-course-ai/docs/tutorial-js/dom",draft:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Estructuras Ciclicas",permalink:"/explorer-course-ai/docs/tutorial-js/estructuras-ciclicas"},next:{title:"Eventos",permalink:"/explorer-course-ai/docs/tutorial-js/eventos"}},c={},i=[{value:"\xbf Qu\xe9 es el DOM ?",id:"-qu\xe9-es-el-dom-",level:2},{value:"document.getElementById(&quot;id&quot;)",id:"documentgetelementbyidid",level:3},{value:"document.querySelector()",id:"documentqueryselector",level:3},{value:"document.getElementByClassName(&#39;class&#39;)",id:"documentgetelementbyclassnameclass",level:3},{value:"document.getElementsByTagName()",id:"documentgetelementsbytagname",level:3},{value:"document.querySelectorAll()",id:"documentqueryselectorall",level:3},{value:"M\xe9todos importantes para la manipulacion del css desde Javacsript",id:"m\xe9todos-importantes-para-la-manipulacion-del-css-desde-javacsript",level:2}],m={toc:i};function d(e){let{components:a,...t}=e;return(0,l.kt)("wrapper",(0,n.Z)({},m,t,{components:a,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"dom-document-object-model"},"DOM (Document Object Model)"),(0,l.kt)("div",{style:{position:"relative"}},(0,l.kt)("div",{className:"card-demo cardDemo"},(0,l.kt)("div",{className:"card",style:{backgroundColor:"#242526"}},(0,l.kt)("div",{className:"card__header"},(0,l.kt)("h3",{style:{color:"#FFF",textAlign:"center"}},"Tareas")),(0,l.kt)("div",{className:"card__body"},(0,l.kt)("a",{href:"https://github.com/Agile-Innova-Academy/explorer-course/tree/main/2.%20Javascript/05-DOM/tarea-1",target:"_blank"},(0,l.kt)("button",{className:"button button--primary button--block",style:{marginBottom:"10px"}},"Tarea 1")))))),(0,l.kt)("p",null,"Fundamentos del ",(0,l.kt)("strong",{parentName:"p"},"DOM")),(0,l.kt)("h2",{id:"-qu\xe9-es-el-dom-"},"\xbf Qu\xe9 es el DOM ?"),(0,l.kt)("p",null,"Las siglas ",(0,l.kt)("strong",{parentName:"p"},"DOM")," significan ",(0,l.kt)("strong",{parentName:"p"},"Document Object Model"),", o que es lo mismo a  la estructura del documento HTML. Una p\xe1gina HTML est\xe1 formada por m\xfaltiples etiquetas HTML, anidadas una dentro de otra, formando un \xe1rbol de etiquetas relacionadas entre s\xed, que se denomina \xe1rbol DOM ",(0,l.kt)("em",{parentName:"p"},"(o simplemente DOM)"),". En Javascript, cuando nos referimos al ",(0,l.kt)("strong",{parentName:"p"},"DOM")," nos referimos a esta estructura, que podemos modificar de forma din\xe1mica desde Javascript, a\xf1adiendo nuevas etiquetas, modificando o eliminando otras, cambiando sus atributos HTML, a\xf1adiendo clases, cambiando el contenido de texto, etc..."),(0,l.kt)("h1",{id:"-c\xf3mo-accedemos-al-dom-"},"\xbf C\xf3mo accedemos al DOM ?"),(0,l.kt)("p",null,"En Javascript, la forma de acceder al DOM es a trav\xe9s de un objeto llamado document, que representa el \xe1rbol DOM de la p\xe1gina o pesta\xf1a del navegador donde nos encontramos. En su interior pueden existir varios tipos de elementos, pero principalmente ser\xe1n ",(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("em",{parentName:"strong"},"ELEMENT"))," o ",(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("em",{parentName:"strong"},"NODE")),":"),(0,l.kt)("blockquote",null,(0,l.kt)("ul",{parentName:"blockquote"},(0,l.kt)("li",{parentName:"ul"},"ELEMENT: no es m\xe1s que la representaci\xf3n gen\xe9rica de una etiqueta: HTMLElement."),(0,l.kt)("li",{parentName:"ul"},"NODE: es una unidad m\xe1s b\xe1sica, la cu\xe1l puede ser ",(0,l.kt)("em",{parentName:"li"},"ELEMENT")," o un nodo de texto."))),(0,l.kt)("p",null,"Si nos encontramos en nuestro c\xf3digo Javascript y queremos hacer modificaciones en un elemento de la p\xe1gina HTML, lo primero que debemos hacer es buscar dicho elemento. Para ello, se suele intentar identificar el elemento a trav\xe9s de alguno de sus atributos m\xe1s utilizados, generalmente el id o la clase."),(0,l.kt)("h1",{id:"seleccionar-un-elemento-del-dom"},"Seleccionar un elemento del DOM"),(0,l.kt)("h3",{id:"documentgetelementbyidid"},'document.getElementById("id")'),(0,l.kt)("p",null,"busca un elemento HTML con el ",(0,l.kt)("strong",{parentName:"p"},"id")," especificado dentro de los par\xe9ntesis "),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("em",{parentName:"strong"},"HTML"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-html"},"<img id='logoAcademia' src='' alt='logo'>\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("em",{parentName:"strong"},"JAVASCRIPT"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"let imagen = document.getElementById('logoAcademia')\n\nconsole.log(imagen)\n//Muestra en consola <img id='logoAcademia' src='' alt='logo'>\n")),(0,l.kt)("h3",{id:"documentqueryselector"},"document.querySelector()"),(0,l.kt)("p",null,"Esta funci\xf3n devuelve el primer elemento que coincide con un selector o selectores css especificados en el documento"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"}," let elem = document.querySelector('.miClase'); //Buscamos un elemento por su clase\n let elem1 = document.querySelector('#miId'); // Buscamos un elemento por su ID\n")),(0,l.kt)("h3",{id:"documentgetelementbyclassnameclass"},"document.getElementByClassName('class')"),(0,l.kt)("p",null,"Obtenermos un array de elementos con esa misma clase"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"let elem = document.getElementsByClassName('clase_del_elemento');\n")),(0,l.kt)("h3",{id:"documentgetelementsbytagname"},"document.getElementsByTagName()"),(0,l.kt)("p",null,"Obtenemos un array de elementos con esa misma etiqueta"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"let elem = document.getElementsByTagName('etiqueta_del_elemento');\n")),(0,l.kt)("h3",{id:"documentqueryselectorall"},"document.querySelectorAll()"),(0,l.kt)("p",null,"Esta funci\xf3n evuelve todos los elementos del documento que coinciden con un selector o selectores css especificados  "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"  let elem = document.querySelectorAll('.miClase');\n")),(0,l.kt)("h1",{id:"-c\xf3mo-modificar-el-dom-desde-javascript-"},"\xbf C\xf3mo modificar el DOM desde Javascript ?"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"SetAtributte(atribute, value)"),": Este metodo permite crearle un atributo a una etiqueta y asignarle un valor, en caso de que el atributo ya exista, lo que hace es actualizar el valor del mismo. En el primer par\xe1metro recibe el nombre del atributo y en el segundo recibe el valor que este tomar\xe1.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"let image = document.getElementById('logoAcademia') // <img id='logoAcademia' src='' alt='logo'>\n\nimage.setAttribute('src', 'https://academiageek.co/wp-content/uploads/2021/03/Logo-AG-2021.png')\nimage.setAttribute('alt', 'nuevo logo')\n\nconsole.log(image)\n// se mostrar\xe1 en consola <img id='logoAcademia' src='https://academiageek.co/wp-content/uploads/2021/03/Logo-AG-2021.png' alt='nuevo logo' />\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"element.style"),": Este m\xe9todo nos permite agregar o actualizar cualquier propiedad css del elemento.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"  let bodyHTML = document.querySelector('body'); // Se captur\xf3 la etiqueta body\n\n  bodyHTML.style.backgroundColor = 'green' // Se cambi\xf3 el color de fondo a verde.\n  bodyHTML.style.fontSize = '50px' // Se cambi\xf3 el tama\xf1o de la fuente a 50px en toda la p\xe1gina\n  bodyHTML.style.textAling = 'center' // Se centran todos los textos y elementos de la p\xe1gina\n")),(0,l.kt)("h2",{id:"m\xe9todos-importantes-para-la-manipulacion-del-css-desde-javacsript"},"M\xe9todos importantes para la manipulacion del css desde Javacsript"),(0,l.kt)("p",null,"  tengamos presente el siguiente elemento, nos ayudar\xe1 con esta parte de la secci\xf3n"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-html"},"  HTML\n  <div class='card card-image'></div>\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"  JS \n  let card = document.querySelector('.card') // se captura la etiqueta con la clase card\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"element.classList"),": Nos permite listas todas las clases que posee un elemento.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"}," console.log(card.classList)\n // Se mostrar\xe1 en consola DOMTokenList(2) ['card', 'card-image', value: 'card card-image']\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"element.classList.add()"),": Nos permite agregarle una nueva clase a el elemento.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"}," card.classList.add('newClass')\n\n console.log(card.classList)\n // Se mostrar\xe1 en consola DOMTokenList(2) ['card', 'card-image', 'newClass', value: 'card card-image newClass']\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"element.classList.remove()"),": Nos permite eliminarle una  clase a el elemento.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"}," card.classList.remove('card-image')\n\n console.log(card.classList)\n // Se mostrar\xe1 en consola DOMTokenList(2) ['card', 'newClass', value: 'card newClass']\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"element.classList.contains()"),": Nos permite evaluar si una clase existe o no en un elemento. Esta retorna un valor booleano, es decir, si la clase existe retorna true, d elo contrario retorna false")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"}," console.log(card.classList.contains('card'))\n // en consola se mostrar\xe1 **_true_** porque el elemento si contiene esa clase\n\n console.log(card.classList.contains('cardContainer'))\n // en consola se mostrar\xe1 **_false_** porque el elemento no contiene esa clase\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"element.classList.replace(first, second)"),": Nos permite reemplazar clases en un elemento, la primera posici\xf3n nos indica el nombre de la clase que\nvamos a reemplazar, y la segunda nos indica el nombre\nde la clase por el cual ser\xe1 reemplazada")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"  card.classlist.replace('newClass', 'oldClass');\n\n  console.log(card)\n  // se mostrar\xe1 en consola DOMTokenList(2) ['card', 'oldClass', value: 'card oldClass']\n")),(0,l.kt)("h1",{id:"crear-e-insertar-elementos-en-el-dom"},"Crear e insertar elementos en el DOM"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"createElement()"),": Permite crear una etiqueta HTML desde javascript. Esta etiqueta se crea ",(0,l.kt)("strong",{parentName:"li"},"TOTALMENTE VAC\xcdA"),".")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"let image = document.createElement('img');\n\nconsole.log(image)\n// Se mostrar\xe1 en consola lo siguiente <img>, una etiqueta totalmente vac\xeda\n\nimage.setAttribute('alt', 'imagen creada');\nimage.setAttribute('src', 'https://academiageek.co/wp-content/uploads/2021/03/Logo-AG-2021.png')\n\nconsole.log(image)\n// se mostrar\xe1 en consola <img id='logoAcademia' src='https://academiageek.co/wp-content/uploads/2021/03/Logo-AG-2021.png' alt='imagen creada' />\n")),(0,l.kt)("p",null,"Sin embargo, esta etiqueta que acabamos de crear a\xfan no se ha insertado en el DOM, por ende los usuarios no podr\xe1n verla. Para este caso podriamos usar el siguiente m\xe9todo para insertarla."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"appendChild()"),": este m\xe9todo nos permite insertar elementos al final de un contenedor, es decir, lo inserta como un hijo al final de todos los elementos que se encuentran dentro del contenedor")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"HTML")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-html"},"<div id='container'>\n  <h1>Academia Geek</h1>\n</div>\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Javascript")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"let contenedor = document.getElementById('container')\n\n// Tomando en cuenta la etiqueta creada anteriormente usando el **createElement** haremos lo siguiente\n\ncontenedor.appendChild(image)\n")),(0,l.kt)("p",null,"Con esto la estructura del HTML quedar\xeda de la siguiente forma"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-html"},"<div id='container'>\n  <h1>Academia Geek</h1>\n  <img id='logoAcademia' src='https://academiageek.co/wp-content/uploads/2021/03/Logo-AG-2021.png' alt='imagen creada' />\n</div>\n")))}d.isMDXComponent=!0}}]);