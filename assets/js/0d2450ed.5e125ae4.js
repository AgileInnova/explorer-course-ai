"use strict";(self.webpackChunkexplorer_course=self.webpackChunkexplorer_course||[]).push([[1413],{3905:(e,a,t)=>{t.d(a,{Zo:()=>c,kt:()=>m});var n=t(7294);function l(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function o(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function r(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?o(Object(t),!0).forEach((function(a){l(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function s(e,a){if(null==e)return{};var t,n,l=function(e,a){if(null==e)return{};var t,n,l={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],a.indexOf(t)>=0||(l[t]=e[t]);return l}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var i=n.createContext({}),p=function(e){var a=n.useContext(i),t=a;return e&&(t="function"==typeof e?e(a):r(r({},a),e)),t},c=function(e){var a=p(e.components);return n.createElement(i.Provider,{value:a},e.children)},d={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},u=n.forwardRef((function(e,a){var t=e.components,l=e.mdxType,o=e.originalType,i=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(t),m=l,k=u["".concat(i,".").concat(m)]||u[m]||d[m]||o;return t?n.createElement(k,r(r({ref:a},c),{},{components:t})):n.createElement(k,r({ref:a},c))}));function m(e,a){var t=arguments,l=a&&a.mdxType;if("string"==typeof e||l){var o=t.length,r=new Array(o);r[0]=u;var s={};for(var i in a)hasOwnProperty.call(a,i)&&(s[i]=a[i]);s.originalType=e,s.mdxType="string"==typeof e?e:l,r[1]=s;for(var p=2;p<o;p++)r[p]=t[p];return n.createElement.apply(null,r)}return n.createElement.apply(null,t)}u.displayName="MDXCreateElement"},5817:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>i,contentTitle:()=>r,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var n=t(7462),l=(t(7294),t(3905));const o={sidebar_position:3},r="CSS B\xe1sico",s={unversionedId:"tutorial-html/css-basico",id:"tutorial-html/css-basico",title:"CSS B\xe1sico",description:"Tareas",source:"@site/docs/tutorial-html/css-basico.md",sourceDirName:"tutorial-html",slug:"/tutorial-html/css-basico",permalink:"/explorer-course-ai/docs/tutorial-html/css-basico",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"HTML - CSS b\xe1sico",permalink:"/explorer-course-ai/docs/tutorial-html/html-css-basico"},next:{title:"HTML - CSS Intermedio",permalink:"/explorer-course-ai/docs/tutorial-html/html-css-intermedio"}},i={},p=[{value:"Profundizando CSS",id:"profundizando-css",level:2},{value:"Herencia",id:"herencia",level:3},{value:"Cascada",id:"cascada",level:3},{value:"Border CSS",id:"border-css",level:3},{value:"Variables CSS",id:"variables-css",level:3},{value:"Pseudoclases :",id:"pseudoclases-",level:2},{value:"Pseudoelementos:",id:"pseudoelementos",level:2}],c={toc:p};function d(e){let{components:a,...t}=e;return(0,l.kt)("wrapper",(0,n.Z)({},c,t,{components:a,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"css-b\xe1sico"},"CSS B\xe1sico"),(0,l.kt)("div",{style:{position:"relative"}},(0,l.kt)("div",{className:"card-demo cardDemo"},(0,l.kt)("div",{className:"card",style:{backgroundColor:"#242526"}},(0,l.kt)("div",{className:"card__header"},(0,l.kt)("h3",{style:{color:"#FFF",textAlign:"center"}},"Tareas")),(0,l.kt)("div",{className:"card__body"},(0,l.kt)("a",{href:"https://github.com/Agile-Innova-Academy/explorer-course/tree/main/3.%20HTML%20y%20CSS/03-CSS-basico/Tarea-1",target:"_blank"},(0,l.kt)("button",{className:"button button--primary button--block",style:{marginBottom:"10px"}},"Tarea 1")),(0,l.kt)("a",{href:"https://github.com/Agile-Innova-Academy/explorer-course/tree/main/3.%20HTML%20y%20CSS/03-CSS-basico/Tarea-2",target:"_blank"},(0,l.kt)("button",{className:"button button--primary button--block",style:{marginBottom:"10px"}},"Tarea 2")),(0,l.kt)("a",{href:"https://github.com/Agile-Innova-Academy/explorer-course/tree/main/3.%20HTML%20y%20CSS/03-CSS-basico/Tarea-3",target:"_blank"},(0,l.kt)("button",{className:"button button--primary button--block",style:{marginBottom:"10px"}},"Tarea 3")))))),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Fundamentos b\xe1sicos de css")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("em",{parentName:"strong"},"Especificidad"))),(0,l.kt)("iframe",{width:"100%",height:"315",src:"https://www.youtube.com/embed/rbUAQzYNTLQ",title:"YouTube video player",frameBorder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",allowFullScreen:!0}),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("em",{parentName:"strong"},"Herencia"))),(0,l.kt)("iframe",{className:"videos",src:"https://www.youtube.com/embed/LwKzMh3qyL4",title:"YouTube video player",frameBorder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",allowFullScreen:!0}),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("em",{parentName:"strong"},"Variables - Border - Pseudoclases"))),(0,l.kt)("iframe",{className:"videos",src:"https://www.youtube.com/embed/fGWmU3C_BhM",title:"YouTube video player",frameBorder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",allowFullScreen:!0}),(0,l.kt)("h2",{id:"profundizando-css"},"Profundizando CSS"),(0,l.kt)("h3",{id:"herencia"},"Herencia"),(0,l.kt)("p",null,"La herencia en CSS es el mecanismo mediante el cual determinadas propiedades de un elemento padre se transmiten a sus hijos. De hecho, se parece mucho a la herencia gen\xe9tica. Si los progenitores tienen los ojos azules, los hijos seguramente tambi\xe9n tendr\xe1n los ojos azules."),(0,l.kt)("p",null,"No todas las propiedades CSS son heredadas, porque algunas de ellas no tendr\xeda sentido que lo fueran. Por ejemplo, los m\xe1rgenes no se heredan porque es poco probable que un elemento hijo necesite los mismos m\xe1rgenes que su padre."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-html"},"<h1>T\xedtulo</h1>\n<p>Un p\xe1rrafo de texto</p>\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-css"},"html {\n   font-style: normal;\n   font-variant: normal;\n   font-weight: normal;\n   font-size: 75%;\n   line-height: normal;\n   font-family: Verdana,sans-serif;\n   background-color: lightcyan;\n   color:white;\n}\n")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://replit.com/@SilviaGarcia1/Herencia#index.html"},"ver en Replit")),(0,l.kt)("p",null,"El valor que se hereda no es el valor especificado, es decir, el valor que escribimos en la hoja de estilo, sino algo que se llama el valor computado. El valor computado es, en el caso del tama\xf1o de la fuente, un valor absoluto medido en p\xedxeles. Para el elemento html, que no tiene un elemento padre del cual heredar, un porcentaje del valor de tama\xf1o de fuente se asocia al tama\xf1o de fuente predeterminada del navegador. La mayor\xeda de los navegadores actuales tienen un tama\xf1o de fuente predeterminada de 16 p\xedxeles. El 75% de 16 son 12, de manera que el valor computado del tama\xf1o de la fuente del elemento html ser\xe1 probablemente 12 p\xedxeles. Este es el valor que hereda body y que se transmite al t\xedtulo y al p\xe1rrafo."),(0,l.kt)("h3",{id:"cascada"},"Cascada"),(0,l.kt)("p",null,"CSS significa cascading style sheets (hojas de estilo en cascada) y, por lo tanto, no deber\xeda extra\xf1arnos que la cascada sea un concepto importante. Es el mecanismo que controla el resultado final cuando se aplican varias declaraciones CSS contrapuestas al mismo elemento."),(0,l.kt)("p",null,"Hay tres conceptos principales que controlan el orden en el que se aplican las declaraciones de CSS:"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Importancia."),(0,l.kt)("li",{parentName:"ol"},"Especificidad."),(0,l.kt)("li",{parentName:"ol"},"Orden en las fuentes.")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("em",{parentName:"strong"},"Importancia")),"\nLa importancia de una declaraci\xf3n de CSS depende de d\xf3nde se ha especificado. Las declaraciones contrapuestas se aplicar\xe1n en el orden siguiente: las nuevas anular\xe1n a las m\xe1s antiguas."),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Hoja de estilos de agente de usuario."),(0,l.kt)("li",{parentName:"ol"},"Declaraciones normales en hojas de estilo de usuario."),(0,l.kt)("li",{parentName:"ol"},"Declaraciones normales en hojas de estilo de autor."),(0,l.kt)("li",{parentName:"ol"},"Declaraciones importantes en hojas de estilo de autor."),(0,l.kt)("li",{parentName:"ol"},"Declaraciones importantes en hojas de estilo de usuario.")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Una hoja de estilos de agente de usuario")," es la hoja de estilo integrada del navegador. Cada navegador tiene sus propias reglas sobre c\xf3mo mostrar varios elementos de HTML si el usuario o dise\xf1ador de la p\xe1gina no especifica ning\xfan estilo"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Una hoja de estilos de usuario")," es una hoja de estilo que ha especificado el usuario."),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"declaraciones importantes"),", que son las declaraciones que van seguidas de una directiva ",(0,l.kt)("inlineCode",{parentName:"p"},"!important"),"."),(0,l.kt)("p",null,"En este caso, independientemente de lo que haya especificado el dise\xf1ador, e independientemente de aquello que se haya establecido como familia de fuentes predeterminada del navegador, todo se mostrar\xe1 con Comic Sans MS por la indicacion de ",(0,l.kt)("inlineCode",{parentName:"p"},"!important"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-css"},'* {\n   font-family: "Comic Sans MS" !important;\n}\n')),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("em",{parentName:"strong"},"Especificidad")),"\nMDN lo explica muy bien (como siempre):"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},'"La especificidad es la manera mediante la cual los navegadores deciden que\u0301 valores de una propiedad CSS son ma\u0301s relevantes para un elemento y, por lo tanto, sera\u0301n aplicados."')),(0,l.kt)("p",null,"Esto significa que la especificidad de CSS es un conjunto de reglas usadas por los navegadores para determinar cua\u0301l de los estilos definidos por el desarrollador se aplicara\u0301 a un elemento especi\u0301fico."),(0,l.kt)("p",null,"jerarqui\u0301a de estilos:"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Estilos inline, es la mas importante por su asignaci\xf3n directamente en el HTML. Pero esta asignaci\xf3n de estilos no es recomendada.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-html"},"<h3 style='color: red'>Hello World</h3>\n")),(0,l.kt)("ol",{start:2},(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Selectores de ID"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-html"},'<h3 id="sub-header">Hello World</h3>\n'))),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Clases, atributos y pseudo-clases"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-html"},'\x3c!-- Class Selector --\x3e\n<h3 class="hello-header">Hello World!</h3>\n\n')))),(0,l.kt)("a",{href:"https://webdesign.tutsplus.com"},"Web Design Tutorial"),(0,l.kt)("button",null,"Delete"),"```",(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-css"},'.hello-header { color: blue }\n\na[href="https://webdesign.tutsplus.com"] { color: green }\n\nbutton:hover { background-color: blue }\n')),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("em",{parentName:"strong"},"Orden en las fuentes")),"\nSi dos declaraciones afectan al mismo elemento, tienen la misma importancia y la misma especificidad, la se\xf1al distintiva final es el orden en las fuentes.La declaraci\xf3n de estilos que se observar\xe1 en el navegador ser\xe1 la declaraci\xf3n que este de ultima en las hojas de estilo."),(0,l.kt)("h3",{id:"border-css"},"Border CSS"),(0,l.kt)("p",null,"Las propiedades del borde CSS le permiten especificar el estilo, el ancho y el color del borde de un elemento."),(0,l.kt)("p",null,"Se permiten los siguientes valores:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"dotted")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"dashed")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"solid")," "),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"double")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"groove")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"ridge")," "),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"inset")," "),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"outset")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"none"),"  "),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"hidden"))),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://replit.com/@SilviaGarcia1/Border#style.css"},"Ver en Replit")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-html"},"<h2>Ejemplo</h2>\n<div>Border</div>\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-css"},"div{\n  border: 4px outset rebeccapurple;\n}\n")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/es/docs/Web/CSS/border-style"},"Leer m\xe1s informaci\xf3n en MDN")),(0,l.kt)("h3",{id:"variables-css"},"Variables CSS"),(0,l.kt)("p",null,"Las variables CSS tienen acceso al DOM, lo que significa que puede crear variables con alcance local o global, cambiar las variables con JavaScript y cambiar las variables en funci\xf3n de las consultas de medios."),(0,l.kt)("p",null,"Una buena forma de utilizar variables CSS es cuando se trata de los colores de su dise\xf1o. En lugar de copiar y pegar los mismos colores una y otra vez, puede colocarlos en variables."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Sintaxis:")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},":root"),"- Variable global"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"var(--blue)")," insertar el valor")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-css"},":root {\n  --blue: #1e90ff;\n  --white: #ffffff;\n}\n\nbody { background-color: var(--blue); }\n\nh2 { border-bottom: 2px solid var(--blue); }\n\n")),(0,l.kt)("h2",{id:"pseudoclases-"},"Pseudoclases :"),(0,l.kt)("p",null,"Las pseudoclases se utilizan para dar estilos a elementos respecto al comportamiento que experimentan en determinado momento."),(0,l.kt)("p",null,"Enlaces:\n",(0,l.kt)("inlineCode",{parentName:"p"},":link"),"\tAplica estilos cuando el enlace no ha sido visitado todav\xeda."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},":visited"),"\tAplica estilos cuando el enlace ha sido visitado anteriormente."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-css"},"a:link {\n  color: green;\n  font-weight: bold\n}\n")),(0,l.kt)("p",null,"Maouse:\n:hover\tAplica estilos cuando pasamos el rat\xf3n sobre un elemento."),(0,l.kt)("p",null,":active\tAplica estilos cuando estamos pulsando sobre el elemento."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-css"},"/* Usuario mueve el mause sobre un <div> y resalta todos los enlaces que contiene */\ndiv:hover  {\n  background-color: steelblue;\n  color: white;\n}\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("em",{parentName:"strong"},"Validaci\xf3n"))),(0,l.kt)("p",null,"Con estas validaciones podemos asegurarnos de que el usuario escribe en un campo de un formulario el valor esperado que deber\xeda. Existen algunas pseudoclases \xfatiles para las validaciones, como por ejemplo las siguientes:"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},":required"),"\tCuando el campo es obligatorio, o sea, tiene el atributo required."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},":optional"),"\tCuando el campo es opcional (por defecto, todos los campos)."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},":invalid"),"\tCuando los campos no cumplen la validaci\xf3n HTML5."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},":valid"),"\tCuando los campos cumplen la validaci\xf3n HTML5."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},":out-of-range"),"\tCuando los campos num\xe9ricos est\xe1n fuera del rango"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},":in-range"),"\tCuando los campos num\xe9ricos est\xe1n dentro del rango"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-css"},"input:required {\n  border: 2px solid blue;\n}\n")),(0,l.kt)("h2",{id:"pseudoelementos"},"Pseudoelementos:"),(0,l.kt)("p",null,"Al igual que las pseudoclases, los pseudoelementos son otra de las caracter\xedsticas de CSS que permiten hacer referencias a \xabcomportamientos virtuales no tangibles\xbb, o lo que es lo mismo, se le puede dar estilo a elementos que no existen realmente en el HTML, y que se pueden generar desde CSS."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"::before"),"\tAplica los estilos antes del elemento indicado."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"::after"),"   Aplica los estilos despu\xe9s del elemento indicado."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"::first-letter"),"\tAplica los estilos en la primera letra del texto."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"::first-line"),"\tAplica los estilos en la primera l\xednea del texto."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-css"},"q::before {\n  content: \"\xab\";\n  color: #888;\n}\n\np::first-letter {\n  color: black;\n  font-family: 'Times New Roman', serif;\n  font-size: 42px;\n}\n\np::first-line {\n  color: #999;\n}\n\n")))}d.isMDXComponent=!0}}]);