"use strict";(self.webpackChunkexplorer_course=self.webpackChunkexplorer_course||[]).push([[6793],{3905:(e,a,o)=>{o.d(a,{Zo:()=>c,kt:()=>u});var n=o(7294);function t(e,a,o){return a in e?Object.defineProperty(e,a,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[a]=o,e}function r(e,a){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),o.push.apply(o,n)}return o}function l(e){for(var a=1;a<arguments.length;a++){var o=null!=arguments[a]?arguments[a]:{};a%2?r(Object(o),!0).forEach((function(a){t(e,a,o[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):r(Object(o)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(o,a))}))}return e}function s(e,a){if(null==e)return{};var o,n,t=function(e,a){if(null==e)return{};var o,n,t={},r=Object.keys(e);for(n=0;n<r.length;n++)o=r[n],a.indexOf(o)>=0||(t[o]=e[o]);return t}(e,a);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)o=r[n],a.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(t[o]=e[o])}return t}var i=n.createContext({}),p=function(e){var a=n.useContext(i),o=a;return e&&(o="function"==typeof e?e(a):l(l({},a),e)),o},c=function(e){var a=p(e.components);return n.createElement(i.Provider,{value:a},e.children)},d={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},m=n.forwardRef((function(e,a){var o=e.components,t=e.mdxType,r=e.originalType,i=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=p(o),u=t,k=m["".concat(i,".").concat(u)]||m[u]||d[u]||r;return o?n.createElement(k,l(l({ref:a},c),{},{components:o})):n.createElement(k,l({ref:a},c))}));function u(e,a){var o=arguments,t=a&&a.mdxType;if("string"==typeof e||t){var r=o.length,l=new Array(r);l[0]=m;var s={};for(var i in a)hasOwnProperty.call(a,i)&&(s[i]=a[i]);s.originalType=e,s.mdxType="string"==typeof e?e:t,l[1]=s;for(var p=2;p<r;p++)l[p]=o[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,o)}m.displayName="MDXCreateElement"},1322:(e,a,o)=>{o.r(a),o.d(a,{assets:()=>i,contentTitle:()=>l,default:()=>d,frontMatter:()=>r,metadata:()=>s,toc:()=>p});var n=o(7462),t=(o(7294),o(3905));const r={sidebar_position:4},l="HTML - CSS Intermedio",s={unversionedId:"tutorial-html/html-css-intermedio",id:"tutorial-html/html-css-intermedio",title:"HTML - CSS Intermedio",description:"Tareas",source:"@site/docs/tutorial-html/html-css-intermedio.md",sourceDirName:"tutorial-html",slug:"/tutorial-html/html-css-intermedio",permalink:"/explorer-course-ai/docs/tutorial-html/html-css-intermedio",draft:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"CSS B\xe1sico",permalink:"/explorer-course-ai/docs/tutorial-html/css-basico"},next:{title:"Formularios",permalink:"/explorer-course-ai/docs/tutorial-html/formularios"}},i={},p=[{value:"Modelo de caja y herramientas",id:"modelo-de-caja-y-herramientas",level:2},{value:"DevTools",id:"devtools",level:2},{value:"Colores",id:"colores",level:2},{value:"Background",id:"background",level:2},{value:"Usando fuentes de Google Fonts",id:"usando-fuentes-de-google-fonts",level:2}],c={toc:p};function d(e){let{components:a,...o}=e;return(0,t.kt)("wrapper",(0,n.Z)({},c,o,{components:a,mdxType:"MDXLayout"}),(0,t.kt)("h1",{id:"html---css-intermedio"},"HTML - CSS Intermedio"),(0,t.kt)("div",{style:{position:"relative"}},(0,t.kt)("div",{className:"card-demo cardDemo"},(0,t.kt)("div",{className:"card",style:{backgroundColor:"#242526"}},(0,t.kt)("div",{className:"card__header"},(0,t.kt)("h3",{style:{color:"#FFF",textAlign:"center"}},"Tareas")),(0,t.kt)("div",{className:"card__body"},(0,t.kt)("a",{href:"https://github.com/Agile-Innova-Academy/explorer-course/tree/main/3.%20HTML%20y%20CSS/04-HTML-CSS-intermedio/Tarea-01",target:"_blank"},(0,t.kt)("button",{className:"button button--primary button--block",style:{marginBottom:"10px"}},"Tarea 1")),(0,t.kt)("a",{href:"https://github.com/Agile-Innova-Academy/explorer-course/tree/main/3.%20HTML%20y%20CSS/04-HTML-CSS-intermedio/Tarea-02",target:"_blank"},(0,t.kt)("button",{className:"button button--primary button--block",style:{marginBottom:"10px"}},"Tarea 2")),(0,t.kt)("a",{href:"https://github.com/Agile-Innova-Academy/explorer-course/tree/main/3.%20HTML%20y%20CSS/04-HTML-CSS-intermedio/Tarea-03",target:"_blank"},(0,t.kt)("button",{className:"button button--primary button--block",style:{marginBottom:"10px"}},"Tarea 3")))))),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},(0,t.kt)("em",{parentName:"strong"},"Ejercicio parte 1"))),(0,t.kt)("iframe",{className:"videos",src:"https://www.youtube.com/embed/YRWDRJkjMgs",title:"YouTube video player",frameBorder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",allowFullScreen:!0}),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},(0,t.kt)("em",{parentName:"strong"},"Ejercicio parte 2"))),(0,t.kt)("iframe",{className:"videos",src:"https://www.youtube.com/embed/-jaanNW3jSo",title:"YouTube video player",frameBorder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",allowFullScreen:!0}),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},(0,t.kt)("em",{parentName:"strong"},"Ejercicio parte 3"))),(0,t.kt)("iframe",{className:"videos",src:"https://www.youtube.com/embed/HlZrhAUbKV8",title:"YouTube video player",frameBorder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",allowFullScreen:!0}),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},(0,t.kt)("em",{parentName:"strong"},"Ejercicio parte 4"))),(0,t.kt)("iframe",{className:"videos",src:"https://www.youtube.com/embed/EqyfhxFwhNA",title:"YouTube video player",frameBorder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",allowFullScreen:!0}),(0,t.kt)("h2",{id:"modelo-de-caja-y-herramientas"},"Modelo de caja y herramientas"),(0,t.kt)("p",null,"En HTML cada elemento se representa visualmente como una caja, lo podemos ver f\xe1cilmente a\xf1adiendo un borde a un elemento HTML y viendo c\xf3mo lo pinta el navegador."),(0,t.kt)("p",null,"El modelo de caja es una especificaci\xf3n que define las caracter\xedsticas espec\xedficas de esa caja y como infieren en el resto de elementos de la p\xe1gina; es el que le dice al navegador c\xf3mo debe pintar cada caja (elemento)."),(0,t.kt)("p",null,"Antes de entrar en profundidad con los modelos de caja tenemos que ver conceptos b\xe1sicos (alto, ancho, borde, margen y padding) y las formas b\xe1sicas de visualizaci\xf3n de los elementos HTML."),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},(0,t.kt)("em",{parentName:"strong"},"Height, width, border, padding y margin")),"\nCada elemento tiene una altura (height) y anchura (width). Adem\xe1s, puede tener otros atributos relacionados que influyen en su tama\xf1o y su posici\xf3n, que son el padding, los m\xe1rgenes y los bordes:"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"el borde de un elemento es una l\xednea que puede tener distinto grosor y que encuadra el contenido del elemento"),(0,t.kt)("li",{parentName:"ul"},"el padding es la distancia desde el contenido del elemento hasta el borde"),(0,t.kt)("li",{parentName:"ul"},"el margen es la distancia desde borde del elemento hasta los elementos que est\xe1n a su alrededor.")),(0,t.kt)("p",null,(0,t.kt)("img",{parentName:"p",src:"https://storage.googleapis.com/academia-geek-general-bucket/modulo-1/modulo_1_img_13.png",alt:null})),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},(0,t.kt)("em",{parentName:"strong"},"Visualizaci\xf3n (display)"))),(0,t.kt)("p",null,"La propiedad CSS display, se encarga de definir c\xf3mo se va a visualizar un elemento HTML, c\xf3mo va a colocarse en la p\xe1gina y c\xf3mo se colocar\xe1n el resto de elementos respecto a este. Seg\xfan el valor que tenga asignado display, un elemento puede ocupar el ancho entero de su contenedor, ocupar solo el espacio que necesite para mostrar su contenido, mostrarse como si fuese una casilla de una tabla o directamente ocultarse.\nLos navegadores web aplican por defecto un valor display a todos los elementos HTML de nuestra web. Hay muchos valores distintos para display pero, por el momento, nosotros solo veremos cuatro:"),(0,t.kt)("ol",null,(0,t.kt)("li",{parentName:"ol"},"block"),(0,t.kt)("li",{parentName:"ol"},"inline"),(0,t.kt)("li",{parentName:"ol"},"inline-block"),(0,t.kt)("li",{parentName:"ol"},"none")),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},(0,t.kt)("em",{parentName:"strong"},"Block"))),(0,t.kt)("p",null,"Los elementos en bloque se muestran ocupando el ancho completo de su contenedor\n",(0,t.kt)("a",{parentName:"p",href:"https://codepen.io/adalab/pen/WXQgrq"},"Elementos en bloque")),(0,t.kt)("p",null,"Usando CSS podemos hacer que un elemento que no se muestra en bloque cambie y se muestre de esta manera. Para ello aplicaremos ",(0,t.kt)("inlineCode",{parentName:"p"},"display: block")," en el elemento. De esta forma, si queremos hacer que un elemento con la clase block se muestre en bloque, utilizaremos el siguiente c\xf3digo:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-css"},".block {\n  display: block;\n}\n")),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},(0,t.kt)("em",{parentName:"strong"},"Inline"))),(0,t.kt)("p",null,"Los elementos en l\xednea o inline son aquellos que ocupan el ancho de su contenido. En estos, el tama\xf1o ser\xe1 exactamente el tama\xf1o de su contenido y estos pueden colocarse uno al lado del otro hasta que no quede m\xe1s espacio restante en la fila."),(0,t.kt)("p",null,(0,t.kt)("a",{parentName:"p",href:"https://codepen.io/adalab/pen/vWNzLj"},"Elementos en linea")),(0,t.kt)("p",null,"Una regla muy importante que se aplica sobre los elementos en l\xednea es que estos no pueden cambiar su ancho ni su alto, no pueden tener m\xe1rgenes horizontales y se puede aplicar margen y padding vertical, pero este no se tiene en cuenta a la hora de definir su altura y su posici\xf3n vertical. Esto los diferencia de los elementos en bloque, que permiten tener un ancho y un alto espec\xedfico y m\xe1rgenes y padding tanto vertical como horizontal. Veremos la importancia de esto en esta misma sesi\xf3n, cuando hablemos del modelo de cajas."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre"},"Nota:\nLas im\xe1genes son un tipo especial de elemento en l\xednea que por sus caracter\xedsticas act\xfaa como una mezcla de elemento en l\xednea y elemento en bloque, ya que pueden tener m\xe1rgenes y padding verticales y se les pueden asignar un ancho y un alto.\n")),(0,t.kt)("p",null,"Usando CSS podemos cambiar la visualizaci\xf3n de un elemento para hacer que se muestre en l\xednea"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-css"},".inline {\n  display: inline;\n}\n")),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},(0,t.kt)("em",{parentName:"strong"},"inline-block"))),(0,t.kt)("p",null,"En este caso y como su nombre indica, el comportamiento de los elementos inline-block es una mezcla entre el comportamiento de los elementos en l\xednea y los elementos en bloque."),(0,t.kt)("p",null,"Los elementos inline-block ocupan por defecto el ancho de su contenido y se comportan como si se tratase de una palabra m\xe1s dentro de un texto, al igual que los elementos en l\xednea, pero permiten tener un ancho, un alto, padding y m\xe1rgenes verticales, como sucede con los elementos en bloque."),(0,t.kt)("p",null,(0,t.kt)("a",{parentName:"p",href:"https://codepen.io/adalab/pen/vWNzLj"},"Elementos inline-block")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-css"},".inline {\n  display: inline;\n}\n")),(0,t.kt)("p",null,"Usando CSS podemos cambiar la visualizaci\xf3n del elemento "),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-css"},".inline {\n  display: inline-block;\n}\n")),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},(0,t.kt)("em",{parentName:"strong"},"Elementos ocultos"))),(0,t.kt)("p",null,"A veces queremos que un elemento est\xe9 oculto, por ejemplo, el t\xedpico mensaje de aviso de cookies que aparece cada vez que entramos en una p\xe1gina. Con JavaScript, haremos que este mensaje se muestre o se oculte dependiendo si hemos visitado antes la p\xe1gina o no, pero desde JavaScript lo que haremos ser\xe1 a\xf1adir o quitar una clase CSS, los estilos los gestionaremos siempre desde el CSS."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-css"},".hidden {\n   display: none;\n}\n")),(0,t.kt)("p",null,"Este c\xf3digo lo que hace es ocultar por completo cualquier elemento al que le a\xf1adamos la clase ",(0,t.kt)("inlineCode",{parentName:"p"},"hidden"),". Ser\xe1 como si ese elemento no existiese ya que no se mostrar\xe1, y el resto de elementos de la p\xe1gina lo ignorar\xe1n."),(0,t.kt)("p",null,"Puedes ver un ejemplo en el siguiente Codepen:"),(0,t.kt)("p",null,(0,t.kt)("a",{parentName:"p",href:"https://codepen.io/adalab/pen/GOpXmw"},"Elementos ocultos")),(0,t.kt)("p",null,"Resumen de los elementos del Display en Codepen:"),(0,t.kt)("p",null,(0,t.kt)("a",{parentName:"p",href:"https://codepen.io/adalab/pen/QOjVye"},"Elementos inline, inline-block y block en Codepen")),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},(0,t.kt)("em",{parentName:"strong"},"Ejercicio #1")),"\nDisplays"),(0,t.kt)("p",null,"Prepara tres divs con un tama\xf1o de 100x100, cambia sus displays (block, inline, inline-block, none) y observa c\xf3mo se comportan."),(0,t.kt)("p",null,(0,t.kt)("a",{parentName:"p",href:"https://replit.com/@SilviaGarcia1/Displays#style.css"},"Ver en Replit")),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},(0,t.kt)("em",{parentName:"strong"},"Dimensiones y box-sizing")),"\nUna vez vistos los modos principales de visualizaci\xf3n podemos entrar al modelo de caja. Recordemos que el modelo de caja es el que le dice al navegador c\xf3mo debe pintar cada caja."),(0,t.kt)("p",null,"Si pensamos en el conjunto global, una p\xe1gina ser\xeda como un conjunto de cajas una dentro de otra, por lo tanto, si pensamos en cada elemento a partir de ahora como un rect\xe1ngulo nos ser\xe1 mucho m\xe1s f\xe1cil visualizar c\xf3mo se compone la estructura de una web y c\xf3mo podemos pensar en ella combinando elementos que contienen otros elementos a su vez."),(0,t.kt)("p",null,(0,t.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/The_box_model"},"Puedes leer una explicaci\xf3n m\xe1s completa sobre el modelo de caja en la documentaci\xf3n de la MDN")),(0,t.kt)("p",null,(0,t.kt)("a",{parentName:"p",href:"https://codepen.io/adalab/pen/qoJNyN"},"Ejemplo de modelo de caja en Codepen")),(0,t.kt)("p",null,"Si quisi\xe9ramos cambiar el modelo de caja para todos los elementos podemos usar el selector *, que modifica todos los elementos de la p\xe1gina, y por lo tanto debemos de usarlo con mucho tiento."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-css"},"* {\n  box-sizing: border-box\n }\n")),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},(0,t.kt)("em",{parentName:"strong"},"Ejercicio #2 Ajustando im\xe1genes")),"\nHacer un div de 100x100px usando las propiedades width y height, incluir dentro una imagen de 100x100px y probar:"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"A\xf1adir un padding de 10px"),(0,t.kt)("li",{parentName:"ul"},"A\xf1adir un borde de 5px"),(0,t.kt)("li",{parentName:"ul"},"Cambiar el modelo de caja a border-box y explica qu\xe9 ha pasado"),(0,t.kt)("li",{parentName:"ul"},"Centrar la caja utilizando el valor auto en los margenes horizontales.")),(0,t.kt)("p",null,(0,t.kt)("a",{parentName:"p",href:"https://replit.com/@SilviaGarcia1/modelo-caja#style.css"},"Ver en Replit")),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},(0,t.kt)("em",{parentName:"strong"},"Ejercicio #3 Equipo corch\xe1ngulo"))," "),(0,t.kt)("p",null,"Nos vamos de hackaton, y la p\xe1gina con los detalles de nuestro equipo est\xe1 sin terminar. La maquetadora la ha dejado preparada a falta de descomentar algunas l\xedneas. Mira el ",(0,t.kt)("a",{parentName:"p",href:"https://codepen.io/adalab/pen/LrPbmb?editors=1100"},"Codepen")," que ha preparado y descomenta y comenta las l\xedneas de CSS para ver c\xf3mo se comportan los elementos."),(0,t.kt)("h2",{id:"devtools"},"DevTools"),(0,t.kt)("p",null,"El inspector es una de las muchas herramientas de desarrollo que incluye el navegador web Google Chrome. Este grupo de herramientas recibe el nombre de Chrome DevTools."),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},(0,t.kt)("em",{parentName:"strong"},"\xbfC\xf3mo lo abrimos?")),"\nPara abrir el inspector tenemos varias opciones:\nPulsando en el men\xfa de tres botones de la derecha superior de Chrome > m\xe1s herramientas > herramientas para desarrolladores\nUsar ",(0,t.kt)("inlineCode",{parentName:"p"},"Ctrl+Shift+I")," en Ubuntu o Windows y ",(0,t.kt)("inlineCode",{parentName:"p"},"Cmd+Opci\xf3n+I")," en Mac."),(0,t.kt)("p",null,"Pulsar con el bot\xf3n derecho sobre un elemento de nuestra p\xe1gina y seleccionar la opci\xf3n Inspeccionar"),(0,t.kt)("p",null,"Si queremos cerrarlo..."),(0,t.kt)("p",null,"Pulsamos en la cruz que aparece en la esquina superior derecha del panel\nUsamos ",(0,t.kt)("inlineCode",{parentName:"p"},"Ctrl++ShiftI")," en Ubuntu o Windows y ",(0,t.kt)("inlineCode",{parentName:"p"},"Cmd+Opci\xf3n+I")," en Mac de nuevo."),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},(0,t.kt)("em",{parentName:"strong"},"\xbfPara qu\xe9 nos sirve?"))),(0,t.kt)("p",null,"Dado que nos permite controlar qu\xe9 est\xe1 pasando con una web, podemos ver los recursos que se est\xe1n cargando y cu\xe1les fallan. Nos permite ver el c\xf3digo tanto de nuestra p\xe1gina, para ver si est\xe1 funcionando correctamente, como de otras, para ver c\xf3mo aplican ciertas t\xe9cnicas o coger inspiraci\xf3n."),(0,t.kt)("p",null,"Por otro lado, nos permite investigar qu\xe9 cambios queremos hacer sin guarrear nuestro CSS o HTML y corregir de forma m\xe1s r\xe1pida y sencilla los errores de nuestro c\xf3digo.\nPor ejemplo, podemos ver informaci\xf3n del modelo de caja."),(0,t.kt)("h2",{id:"colores"},"Colores"),(0,t.kt)("p",null,"Para empezar, vamos a ver los distintos formatos que podemos usar para indicar colores, que podemos usar por ejemplo como valor de nuestro querida propiedad CSS color."),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},(0,t.kt)("em",{parentName:"strong"},"Colores con palabras clave")),"\nLa primera forma de indicar un color es mediante la palabra clave que indica el nombre del color. Hay un mont\xf3n de palabras clave para colores que podemos usar que pod\xe9is ver en la tabla de este art\xedculo."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-css"},"p {\n  color: fuchsia;\n}\n")),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},(0,t.kt)("em",{parentName:"strong"},"Colores en hexadecimal"))),(0,t.kt)("p",null,"De forma equivalente a las palabras clave, podemos expresar un color con formato hexadecimal. En este formato declaramos un color con una almohadilla # y sus 3 componentes RGB - R (rojo), G (verde), B (azul). Cada uno de los componentes se representa con 2 d\xedgitos en hexadecimal, es decir, cada d\xedgito puede tener 16 valores, entre 0 - 9 y A - F. Por ejemplo, el color fucsia se compone de una componente m\xe1xima de rojo (ff), nada de verde (00) y m\xe1xima de azul (ff)."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-css"},"p {\n  color: #ff00ff;\n}\n")),(0,t.kt)("p",null,"Suele ser habitual expresar algunos colores comunes de forma simplificada. Si los d\xedgitos de cada componente son iguales (por ejemplo, ff) puede escribirse el color de una forma simplificada escribiendo s\xf3lo una vez el d\xedgito repetido. Por ejemplo, el fucsia puede simplificarse porque todos los componentes tienen el d\xedgito repetido."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-css"},"p {\n  color: #f0f;\n}\n")),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},(0,t.kt)("em",{parentName:"strong"},"rgb y rgba"))),(0,t.kt)("p",null,"Como hemos visto en el caso anterior, los colores podemos expresarlos con sus componentes RGB (Red, Green, Blue)"),(0,t.kt)("p",null,"En CSS existe la posibilidad de, en lugar de usar 2 d\xedgitos hexadecimales, expresar el color usando el valor decimal (n\xfamero normal) de cada componente RGB, que tendr\xe1 un valor entre 0 y 255 (los mismos valores que pod\xedamos indicar con 2 d\xedgitos hexadecimales)."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-css"},"p {\n  color: rgb(255, 0, 255);\n}\n")),(0,t.kt)("p",null,"Existe adem\xe1s la posibilidad de indicar un nivel de opacidad al color con el formato RGBA que a\xf1ade el canal alpha o transparencia. Este \xfaltimo componente tiene valores decimales entre 0 (totalmente transparente) y 1 (totalmente opaco)."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-css"},"p {\n  color: rgba(255, 0, 255, 0.7);\n}\n")),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},(0,t.kt)("em",{parentName:"strong"},"hsl y hsla")),"\nIgual que el RGB nos permite expresar colores a partir de sus componentes de color rojo/verde/azul, existe otro sistema, HSL, que nos permite expresarlos a trav\xe9s de H (hue - matiz), S (saturation - saturaci\xf3n), L (lightness - luminosidad). El matiz se expresa con un valor num\xe9rico y tanto saturaci\xf3n como luminosidad con un valor en %. En este caso, tambi\xe9n existe la posibilidad de a\xf1adir un canal alpha para indicar transparencia."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-css"},"p {\n  color: hsl(300, 100%, 50%)\n}\n")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-css"},"p {\n  color: hsl(300, 100%, 50%, 0.7)\n}\n")),(0,t.kt)("p",null,"Para m\xe1s informaci\xf3n, consultad la ",(0,t.kt)("a",{parentName:"p",href:"https://devdocs.io/css/color_value"},"gu\xeda de colores deMDN"),"."),(0,t.kt)("h2",{id:"background"},"Background"),(0,t.kt)("p",null,'Una vez entendido que cada elemento se puede ver como una caja, veamos c\xf3mo a\xf1adir un fondo a dicha "caja":'),(0,t.kt)("p",null,"Gracias a la propiedad background podemos rellenar el fondo de nuestro contenedor con una imagen, con un color, o ambos:"),(0,t.kt)("p",null,(0,t.kt)("img",{parentName:"p",src:"https://storage.googleapis.com/academia-geek-general-bucket/modulo-1/modulo_1_img_14.png",alt:null})),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},(0,t.kt)("em",{parentName:"strong"},"Caracteristicas del Background:"))),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"background-color ",(0,t.kt)("a",{parentName:"li",href:"https://devdocs.io/css/background-color"},"Ver detalle")),(0,t.kt)("li",{parentName:"ul"},"background-image ",(0,t.kt)("a",{parentName:"li",href:"https://devdocs.io/css/background-image"},"Ver detalle")),(0,t.kt)("li",{parentName:"ul"},"background-position ",(0,t.kt)("a",{parentName:"li",href:"https://devdocs.io/css/background-position"},"Ver detalle")),(0,t.kt)("li",{parentName:"ul"},"background-size ",(0,t.kt)("a",{parentName:"li",href:"https://devdocs.io/css/background-size"},"Ver detalle")),(0,t.kt)("li",{parentName:"ul"},"background-repeat ",(0,t.kt)("a",{parentName:"li",href:"https://devdocs.io/css/background-repeat"},"Ver detalle")),(0,t.kt)("li",{parentName:"ul"},"background-origin ",(0,t.kt)("a",{parentName:"li",href:"https://devdocs.io/css/background-origin"},"Ver detalle")),(0,t.kt)("li",{parentName:"ul"},"background-attachment ",(0,t.kt)("a",{parentName:"li",href:"https://devdocs.io/css/background-attachment"},"Ver detalle"))),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-css"},".box {\n    background-image: url('https://fillmurray.com/150/150');\n    background-position: left top;\n    background-repeat: no-repeat;\n}\n")),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},(0,t.kt)("em",{parentName:"strong"},"Background-size")),"\nexisten dos valores especialmente interesantes que permiten definir c\xf3mo se ajustar\xe1 nuestra imagen de fondo al contenedor: contain y cover. "),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"Contain:")," Aumenta o reduce la imagen proporcionalmente todo lo que pueda sin deformarla para que quepa en nuestro contenedor."),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"Cover:")," Aumenta o reduce la imagen proporcionalmente para asegurarse que siempre cubre todo el \xe1rea de nuestro contenedor, aunque eso signifique que parte de la imagen pueda quedar oculta."),(0,t.kt)("h2",{id:"usando-fuentes-de-google-fonts"},"Usando fuentes de Google Fonts"),(0,t.kt)("p",null,"Para utilizar fuentes tipogr\xe1ficas de un sitio externo como Google Fonts, tenemos que seguir 2 sencillos pasos: "),(0,t.kt)("ol",null,(0,t.kt)("li",{parentName:"ol"},"A\xf1adir una etiqueta link a nuestro head con un enlace que cargue la fuente")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-html"},'<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Font+Name">\n')),(0,t.kt)("ol",{start:2},(0,t.kt)("li",{parentName:"ol"},"Usar esta fuente desde nuestro CSS al componente que queremos agregar el tipo de fuente")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-css"},"p{\n  font-family: 'Font Name', serif;\n}\n")))}d.isMDXComponent=!0}}]);